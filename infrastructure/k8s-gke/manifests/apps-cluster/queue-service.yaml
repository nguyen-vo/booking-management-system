apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue-service
  namespace: app-services
  labels:
    app: queue-service
    tier: application
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue-service
  template:
    metadata:
      labels:
        app: queue-service
        tier: application
    spec:
      serviceAccountName: queue-service-account
      containers:
        - name: queue-service
          image: us-east1-docker.pkg.dev/ticket-booking-471523/ticket-booking-repo/queue-service:latest
          ports:
            - containerPort: 3000
              name: http
            - containerPort: 8080
              name: websocket
          env:
            - name: NODE_ENV
              value: 'production'
            - name: REDIS_QUEUE_HOST
              value: 'data-cluster-redis-queue'
            - name: REDIS_QUEUE_PORT
              value: '6379'
            - name: GOOGLE_CLOUD_PROJECT
              value: 'ticket-booking-471523'
            - name: PUBSUB_SUBSCRIPTION
              value: 'queue-service-sub'
            - name: MAX_CONCURRENT_CONNECTIONS
              value: '1000'
            - name: QUEUE_PROCESSING_BATCH_SIZE
              value: '10'
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
      nodeSelector:
        cluster-type: apps
---
apiVersion: v1
kind: Service
metadata:
  name: queue-service
  namespace: app-services
  labels:
    app: queue-service
spec:
  selector:
    app: queue-service
  ports:
    - port: 3000
      targetPort: 3000
      name: http
    - port: 8080
      targetPort: 8080
      name: websocket
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: queue-service-hpa
  namespace: app-services
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: queue-service
  minReplicas: 1
  maxReplicas: 8
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 70
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 80
          periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
